/**
 * Given a string, your task is to count how many palindromic substrings in this string.

 * The substrings with different start indexes or end indexes are counted as different substrings even they consist of same characters.

 * Example 1:
 * Input: "abc"
 * Output: 3
 * Explanation: Three palindromic strings: "a", "b", "c".
 
 * Example 2:
 * Input: "aaa"
 * Output: 6
 * Explanation: Six palindromic strings: "a", "a", "a", "aa", "aa", "aaa".
*/

class Solution {
public:
    int cnt = 0;
    int countSubstrings(string s) {
        if (s.empty()) return 0;
        for (int i=0; i<s.size(); i++) {
            //求以每个字符为中心的回文字符串个数
            addCount(s, i, i);
            addCount(s, i, i+1);
        }
        return cnt;
    }
    void addCount(string &s, int l, int r) {
        while (l>=0 && r<s.size() && s[l]==s[r]) {
            cnt++; l--; r++;
        }
    }
};
