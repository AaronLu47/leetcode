/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if (!l1) return l2;
        if (!l2) return l1;
        
        ListNode* start = NULL;
        //create new list head
        if (l1->val < l2->val) {
            start = l1;
            l1 = l1->next;
        }
        else {
            start = l2;
            l2 = l2->next;
        }
        ListNode* end = start;
        
        while (l1 && l2) {
            if (l1->val < l2->val) {
                end->next = l1;
                l1 = l1->next;
            }
            else {
                end->next = l2;
                l2 = l2->next;
            }
            end = end->next;
        }
        //l1 or l2 is empty
        end->next = l1 ? l1 : l2;
        
        return start;
    }
};
