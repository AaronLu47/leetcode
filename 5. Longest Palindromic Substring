
class Solution {
public:
    string longestPalindrome(string s) {
        if (s.empty() || s.size() == 1) return s;
        int max_len = 1;
        int start = 0;
        int x, y;
        for (int i=0; i<s.size();) {
            if (s.size()-i < max_len/2) break;
            x = i;
            y = i;
            //加入重复字符
            while (x<s.size()-1 && s[x] == s[x+1])
                x++;
            i = x+1;
            //扩张回文字符串
            while (x<s.size()-1 && y>0 && s[x+1] == s[y-1]) {
                x++; y--;
            }
            //max_len = x-y+1 > max_len ? x-y+1 : max_len;
            if (x-y+1 > max_len) {
                max_len = x-y+1;
                start = y;
            }
        }
        return s.substr(start, max_len);
    }
};
