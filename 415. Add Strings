/**
 * Given two non-negative integers num1 and num2 represented as string, return the sum of num1 and num2.
*/


static string speed = [](){
    std::ios::sync_with_stdio();
    std::cin.tie(0);
    return "";
}();

class Solution {
public:
    string addStrings(string num1, string num2) {
        string num(num1.size()>num2.size() ? num1.size()+1 : num2.size()+1, '0');
        int i = num1.size() - 1;
        int j = num2.size() - 1;
        int k = num.size() - 1; 
        int flag = 0; //进位
        while (i >= 0 || j >= 0) {
            int x = (i>=0) ? num1[i] - '0' : 0;
            int y = (j>=0) ? num2[j] - '0' : 0;
            int tmp = x + y + flag;
            num[k--] = tmp % 10 + '0';
            flag = tmp / 10;
            if (i>=0) i--;
            if (j>=0) j--;
        }
        num[0] = flag + '0';
        auto pos = num.find_first_not_of('0');
        if (pos != string::npos) return num.substr(pos);
        else return "0";
    }
};
